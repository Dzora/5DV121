package lab5;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class Parser {

	private Images images;
	private int matrixIndex = 0;
	private String heading = "";
	private int[][] image;

	public Parser() {
		this.images = new Images();
	}

	public Images readFile(String fileName, String keyFileName) throws FileNotFoundException,IOException {
		
		parseImage(fileName);
		parseKeys(keyFileName);
		return images;
	}
	
	private void parseKeys(String keyName) throws FileNotFoundException, IOException {
		try (BufferedReader br = new BufferedReader(new FileReader(keyName))) {
			String line;
			int i = 0;
			String[] happyImages = new String[200];
			String[] sadImages = new String[200];
			String[] missImages =  new String[200];
			String[] angryImages =  new String[200];
			while ((line = br.readLine()) != null) {
				
				if(isCommentOrEmpty(line)){
					continue;
				}
				
				String[] keys = line.split(" ");
				//System.out.println(i);
				System.out.println(keys[1]);
				
				switch (keys[1]) {
				case "1":
					happyImages[i] = keys[0];
				case "2":
					sadImages[i] = keys[0];
				case "3":
					missImages[i] = keys[0];
				case "4":	
					angryImages[i] = keys[0];
				default:
					break;
				}
				i++;
				
			}
			
			images.keyMap.put(1, happyImages);
			images.keyMap.put(2, sadImages);
			images.keyMap.put(3, missImages);
			images.keyMap.put(4, angryImages);
		
		}
	}
	
	private void parseImage(String fileName) throws FileNotFoundException, IOException {
		
		try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
			String line;
			while ((line = br.readLine()) != null) {
				
				if(isCommentOrEmpty(line)){
					continue;
				}
				
				if (matrixIndex == 20) {
					images.imageBlockMap.put(heading, image);
					matrixIndex = 0;
				}
				
				if(checkForImage(line)){
					continue;
				}
				
				buildImage(line);
				
				matrixIndex++;
 			}
			
			images.imageBlockMap.put(heading, image);
		}
	}
	
	private void buildImage(String line) {
		String[] greyAreas = line.split(" ");
		
		for(int i = 0; i < greyAreas.length; i++) {
			image[matrixIndex][i] = Integer.parseInt(greyAreas[i]);
		}
		
	}
	
	private boolean checkForImage(String line) {
		if(line.contains("Image")) {
			heading = line;
			image = new int[20][20];
			return true;
		}
		else {
			return false;
		}
	}
	
	private boolean isCommentOrEmpty(String line) {
		if(line.isEmpty() || line.contains("#")) {
			return true;
		}
		else {
			return false;
		}
	}

}
