package lab5;

import java.lang.reflect.Array;
import java.util.ArrayList;

public class Trainer {

	public Perceptron perceptron;
	private Images images;
	private int typeOfPerceptron;

	public Trainer(Images images, int typeOfFace) {
		this.images = images;
		this.perceptron = new Perceptron(images);
		this.typeOfPerceptron = typeOfFace;
	}

	public void Learn() {
		for (int i = 0; i < images.imageBlockMap.size(); i++) {
			double[][] image = images.imageBlockMap.get("Image" + (i+1));
			double activation = perceptron.run(image);
			double goal = 0;
			
			if(images.facit.get("Image" + (i+1)) == 1 && typeOfPerceptron == 1) {
				goal = 1;
			} else if(images.facit.get("Image" + (i+1)) == 2 && typeOfPerceptron == 2) {
				goal = 1;
			} else if(images.facit.get("Image" + (i+1)) == 3 && typeOfPerceptron == 3) {
				goal = 1;
			} else if(images.facit.get("Image" + (i+1)) == 4 && typeOfPerceptron == 4) {
				goal = 1;
			} else {
				goal = 0;
			}
			
			double learningRate = 0.03;
			
			double error = goal - activation;
			
			for (int j = 0; j < perceptron.getPixelVector().size(); j++) {
				double neuron = perceptron.getPixelVector().get(j); 
				//System.out.println("NEURON = " + neuron);
					  
				double deltaW = learningRate * error * neuron;
					  
				// System.out.println("DELTA = " + deltaW);
					  
				perceptron.getWeightVector().set(j, perceptron.getWeightVector().get(j) + deltaW); 
			}

		}
	}
}
